---
title: "Analyse AIMS logger data - absolute & daily anomalies combined"
format:
  html:
    toc: true
    code-fold: true 
  pdf:
    toc: true
    code-fold: true
    default-image-extension: pdf
editor: source
editor_options: 
  chunk_output_type: console
execute:
  cache: false
---



# Setup 

```{r}
knitr::opts_chunk$set(dev = "png")
```


## Packages 

Install non-cran package

```{r, eval=FALSE}
# install.packages("remotes")
remotes::install_github("EarthSystemDiagnostics/paleospec")
```

```{r packages}
library(dplyr)
library(tidyr)
library(ggplot2)
library(PaleoSpec)
```

## Palettes 

```{r palettes}
pal_logger_sst <- c(
  Logger = "#f0027f",
  OISSTv2 = "#386cb0",
  SST_OISST2_dis = "#386cb0"
)

lbl_logger_sst <- c(
  Logger = "Logger",
  OISSTv2 = "OISSTv2",
  SST_OISST2_dis = "OISSTv2"
)

lty_logger_coral_sst <- c(
  Logger = 1,
  OISSTv2 = 2,
  SST_OISST2_dis = 2
)
```


## Frequency bands and axes

```{r labels}
tscl_brks <- c(0.1, 1/2, 2, 12, 182.5)

tscl_labs <- tibble(
  x = c(1/10, 1/2, 2, 12) * 1.05,
  y = rep(1e-04, length(x)),
  label = c("Decadal to inter-annual",
            "Inter-annual to semiannual",
            "Semiannual to monthly",
            "Monthly to inter-daily"),
  label_brk = c("Decadal to\ninter-annual",
            "Inter-annual\nto semiannual",
            "Semiannual to\nmonthly",
            "Monthly to\ninter-daily")
  )


freq_axis <- ggplot2::scale_x_continuous(
  name = "Frequency [cycles/year]",
  trans = "log10",
  breaks = c(100, 10, 1, 0.1, 0.01),
  labels = c(100, 10, 1, 0.1, 0.01),
  sec.axis = ggplot2::sec_axis(~ 1 / ., name = "Period [years/cycle]",
                               breaks = c(10, 1, 0.1, 0.01),
                               labels = c(10, 1, 0.1, 0.01))
  )

```


## Helper functions

```{r}
summarise_q_2 <- function (dat, var, probs =
                             c(0.025, 0.159, 0.25, 0.5, 0.75, 0.841, 0.975))
{
  dat %>% dplyr::reframe(
    mean = mean({{ var }}, na.rm = TRUE),
    sd = stats::sd({{ var }}, na.rm = TRUE),
    n = sum(is.na({{ var }}) == FALSE),
    x = stats::quantile({{ var }}, probs, na.rm = TRUE),
    q = paste0(round(100 * probs, 1), "%")
    ) %>%
    tidyr::pivot_wider(names_from = "q", values_from = "x") %>%
    dplyr::as_tibble()
}
```


# Load data

```{r load-data}
aims_logger_data_inc_gaps_site_gfill_daily_runs_oisst <-
  readRDS("../data/processed-data/aims_logger_data_inc_gaps_site_pick_gfill_daily_runs_oisst.RDS")
```


## Create labels for site_runs and rename some variables

```{r}
logger_oisst_daily_10 <- aims_logger_data_inc_gaps_site_gfill_daily_runs_oisst %>% 
  group_by(site_run) %>% 
  mutate(site_run = paste0(site, " (", min(year), "-", max(year), ")"),
         run = paste0("(", min(year), "-", max(year), ")")) %>% 
  rename(SST = sst,
         SST_product = interp_type) %>% 
  mutate(year.dec = lubridate::decimal_date(date)) %>% 
  group_by(site) %>% 
  mutate(site_run_year_list = paste(unique(run), collapse = "\n")) %>% 
  ungroup() 
```

## Calculate daily anomalies for later analysis

```{r}
logger_oisst_daily_10_anom <- logger_oisst_daily_10 %>% 
  group_by(site, site_id, month, day) %>% 
  mutate(logger_daily_anom = qc_val_filled - mean(qc_val_filled),
         logger_daily_anom_n = sum(is.na(qc_val_filled) == FALSE),
         SST_daily_anom = SST - mean(SST),
         SST_daily_anom_n = sum(is.na(SST) == FALSE)) %>% 
  rename(SST_daily = SST, 
         logger_daily = qc_val_filled)
```


## Timeseries figure of processed logger data for supplement

```{r fig.height=12, fig.width=9}
fig_timeseries_logger <- logger_oisst_daily_10 %>% 
  ggplot(aes(x = time, y = qc_val_filled, colour = depth, group = site_run)) +
  geom_line() +
  geom_point(aes(y = qc_val_filled * ifelse(is.na(qc_val), 1, NA)), colour = "red") +
  theme_bw() +
  theme(panel.grid.minor = element_blank(), legend.position = "bottom") +
  scale_colour_viridis_c(na.value = "pink", direction = -1
    ) +
  labs(x = "Year", y = "Temperature [°C]", colour = "Logger depth [m]") +
  facet_wrap(~site + site_run_year_list, ncol = 6)

fig_timeseries_logger
```


## Meta data table S1

```{r}
meta_table <- logger_oisst_daily_10 %>% 
  group_by(site, site_run, lon, lat) %>% 
  summarise(start = min(date), end = max(date)) %>% 
  mutate(`Duration (years)` = round(as.numeric((end - start) / 365), 1)) %>% 
  ungroup() %>% 
  select(site_run, lon, lat, start, end, `Duration (years)`) %>% 
  rename(`Site run` = site_run,
         Longitude = lon, Latitude = lat, 
         `Start date` = start, 
         `End date` = end) %>% 
  distinct() 

meta_table %>% 
  knitr::kable(., digits = 2)

# meta_table %>% 
#   mutate(Longitude = round(Longitude, 2), 
#          Latitude = round(Latitude, 2)) %>% 
#   write.csv(., "logger_meta_table_supp.csv")
```


## Aggregate data to annual means

```{r}
logger_oisst_ann <- logger_oisst_daily_10 %>%
  group_by(SST_product, site, site_run, run, year) %>%
  mutate(n = sum(is.na(qc_val_filled) == FALSE)) %>%
  filter(n >= 12) %>%
  summarise_if(is.numeric, mean, na.rm = TRUE) %>%
  group_by(SST_product, site, site_id, site_run) %>%
  mutate(qc_val_filled_anom = qc_val_filled - mean(qc_val_filled),
         sst_anom = SST - mean(SST),
         n_years = diff(range(year.dec)))
```


## RMSE and Bias over time

```{r}
#RMSE by year
RMSE_year <- logger_oisst_ann %>% 
  group_by(SST_product, year) %>% 
  summarise(
    n = n(),
    depth = mean(depth, na.rm = TRUE),
    se = sd(qc_val_filled-SST) / sqrt(n),
    bias = mean((qc_val_filled-SST)),
    RMSE = sqrt(mean((qc_val_filled-SST)^2)),
    rho = cor(SST, qc_val_filled)
    ) 

RMSE_mon <-  logger_oisst_daily_10 %>% 
  group_by(SST_product, year, month, year.dec) %>% 
  summarise(
    n = n(),
    depth = mean(depth, na.rm = TRUE),
    se = sd(qc_val_filled-SST, na.rm = TRUE) / sqrt(n),
    bias = mean((qc_val_filled-SST)),
    RMSE = sqrt(mean((qc_val_filled-SST)^2, na.rm = TRUE))
    )
```

## Figure 2 
```{r Fig2, fig.width = 6, fig.height = 4}
fig_bias_year <- RMSE_year %>% 
  filter(n > 5) %>% 
  ggplot(aes(x = year, y = bias)) +
  geom_hline(yintercept = 0, lty = 2) +
  #geom_hline(yintercept = median(RMSE_year$bias), lty = 2) +
  geom_linerange(aes(ymax = bias + 2*se, ymin = bias - 2*se), alpha = 0.5, lwd = 0.75) +
  geom_linerange(aes(ymax = bias + 1*se, ymin = bias - 1*se), alpha = 0.75, lwd = 1.25) +
  geom_point(alpha = 1, size = 2) +
  geom_line(alpha = 0.75) +
  scale_x_continuous(breaks = seq(1990, 2024, 3)) +
  labs(x = "Year", y = "Offset (logger - OISST) [°C]") +
  theme_bw() +
  theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank()) +
  scale_color_viridis_c()

fig_bias_year  

#ggsave(fig_bias_year, file = "pub-figs/fig_bias_year.png", width = 6, height = 4, dpi = 300)
```


# Spectral analysis

## Spectra of matched logger OISSTv2 timeseries

```{r}
AIMS_logger_spec_match <- logger_oisst_daily_10_anom %>% 
  #filter(site == "21-187 Reef") %>% 
  group_by(site, site_run, run) %>% 
  mutate(start_year = min(year), 
         end_year = max(year),
         inc_2006_2008 = start_year <= 2006 & end_year >= 2008) %>% 
  group_by(site, site_run, inc_2006_2008, run) %>% 
  pivot_longer(cols = c(logger_daily_anom, SST_daily_anom, logger_daily, SST_daily), 
               names_to = "temperature_type", values_to = "temperature") %>% 
  mutate(type = ifelse(grepl("anom", temperature_type, fixed = TRUE),
                       "Daily anomalies", "Daily means")) %>% 
  mutate(sensor_type = ifelse(grepl("SST", temperature_type, fixed = TRUE),
                       "OISSTv2", "Logger")) %>% 
  group_by(temperature_type, sensor_type, type, site, site_run, inc_2006_2008, run) %>% 
  #arrange(time) %>% 
  do({
    
    dat2 <- . 
   
    sp_tmp <- PaleoSpec::SpecMTM(dat2$temperature,
                                 deltat = 1/365#, k = 9, nw = 5
                              ) %>%
    AddConfInterval() %>%
    FilterSpecLog(., df.log = 0.01) %>%
    Spec2DF()
    
    sp_tmp
  }) %>% 
  mutate(spec_id = paste(site, site_run, sensor_type, type)) %>% 
  as_spec_df()
```


## Calculate mean spec across locations

```{r}
AIMS_logger_spec_match_reg <- AIMS_logger_spec_match %>% 
  as_tibble() %>% 
  #select(-SST_product) %>% 
  group_by(temperature_type, sensor_type, type, site, site_run, inc_2006_2008) %>% 
  #arrange(freq) %>% 
  do({
    freqout = seq(1/10, floor(365/2), 1/10)
    
    dat <- .
    
    sp1 <- DF2Spec(dat)
    sp2 <- PaleoSpec::SpecInterpolate(sp1,
                                      freqout)
    Spec2DF(sp2)
    
  }) %>% 
  mutate(spec_id = site_run) %>% 
  as_spec_df()

AIMS_logger_spec_match_reg_mean <- AIMS_logger_spec_match_reg %>% 
  group_by(temperature_type, sensor_type, type, freq) %>%
  summarise(n = sum(is.na(spec) == FALSE),
            spec = mean(spec, na.rm = TRUE),
            dof = sum(dof, na.rm = TRUE)) %>% 
  mutate(spec_id = temperature_type) %>% 
  group_by(temperature_type, sensor_type, type, spec_id) %>% 
  do({
    dat <- .
    sp1 <- DF2Spec(dat)
    sp3 <- AddConfInterval(sp1)
    d <- Spec2DF(sp3)
    d$n = dat$n
    d
  }) %>% 
  mutate(spec_id = paste0(sensor_type, "_", type)) %>% 
  as_spec_df()

#gg_spec(AIMS_logger_spec_match_reg_mean)
```


### Mean PSD of daily mean and anomalies 

```{r}
S_logger_OISST_mean_anom <- AIMS_logger_spec_match_reg_mean %>% 
  as_spec_df() %>% 
  gg_spec(., group = paste(spec_id),
        colour = sensor_type, linetype = type, force.lims = TRUE,
        time_unit = "years") +
  scale_colour_manual("", values = pal_logger_sst,
                      labels = lbl_logger_sst,
                      aesthetics = c("fill", "colour")) +
  freq_axis +
  facet_wrap(~type, scales = "fixed")

S_logger_OISST_mean_anom
```


```{r}
S_logger_OISST_mean <- AIMS_logger_spec_match_reg_mean %>% 
   filter(type == "Daily means") %>% 
  as_spec_df() %>% 
  gg_spec(., group = paste(spec_id),
        colour = sensor_type, force.lims = TRUE,
        time_unit = "years") +
  scale_colour_manual("", values = pal_logger_sst,
                      labels = lbl_logger_sst,
                      aesthetics = c("fill", "colour")) +
  freq_axis +
  facet_wrap(~type, scales = "free_y") +
  geom_vline(xintercept = c(1/10, 1/2, 2, #12,
                            182.5), lty = 3) +
  theme(panel.grid.major = element_blank()) +
  geom_text(data = tscl_labs, aes(x=x, y=y, label = label_brk),
            hjust = "left",
            size = 3,
            inherit.aes = FALSE) +
  labs(y = "PSD daily means")

S_logger_OISST_mean
```


```{r}
S_logger_OISST_anom <- AIMS_logger_spec_match_reg_mean %>% 
  filter(type == "Daily anomalies") %>% 
  as_spec_df() %>% 
  gg_spec(., group = paste(spec_id),
        colour = sensor_type, force.lims = TRUE,
        time_unit = "years") +
  scale_colour_manual("", values = pal_logger_sst,
                      labels = lbl_logger_sst,
                      aesthetics = c("fill", "colour")) +
  freq_axis +
  geom_vline(xintercept = c(1/10, 1/2, 2, #12,
                            182.5), lty = 3) +
  theme(panel.grid.major = element_blank()) +
  geom_text(data = tscl_labs, aes(x=x, y=y, label = label_brk),
            hjust = "left",
            size = 3,
            inherit.aes = FALSE)

S_logger_OISST_anom
```


## PSD ratio per site_run

```{r}
pval <- 0.05
ratio_site_run_spec <- AIMS_logger_spec_match_reg %>% 
  as_tibble() %>% 
  select(-dof, -sensor_type, -type) %>% 
  pivot_wider(names_from = temperature_type, values_from = c(spec)) %>% 
  mutate(Logger_OISST = (logger_daily / SST_daily)) %>% 
  mutate(Logger_OISST_anom = (logger_daily_anom / SST_daily_anom)) %>% 
  select(site, site_run, inc_2006_2008, freq, Logger_OISST, Logger_OISST_anom) %>% 
  pivot_longer(cols = starts_with("Logger_"), values_to = "spec", names_to = "product") %>% 
  mutate(spec_id = product) %>% 
  mutate(type = ifelse(grepl("anom", spec_id, fixed = TRUE),
                       "Daily anomalies", "Daily means")) %>% 
  group_by(type) %>%
  group_by(site, site_run, inc_2006_2008, product, spec_id, type) %>%
  do({
    sp1 <- .
    sp1$dof <- 2
    sp2 <- FilterSpecLog(DF2Spec(sp1))

    Spec2DF(sp2)
  }) %>%
  as_spec_df() 


ratio_site_run_spec_mean <- ratio_site_run_spec %>% 
  group_by(type, product, freq) %>% 
  summarise_if(is.numeric, median, na.rm = TRUE)
```


```{r}
## Save for later use
saveRDS(ratio_site_run_spec, file = "../data/processed-data/logger_OISST_ratio_site_run_spec.RDS")
```


```{r}
depth_key <- logger_oisst_daily_10_anom %>% 
  group_by(site, site_run) %>% 
  summarise(depth = mean(depth, na.rm = TRUE))
```

### PSD ratio figures

#### Daily means

```{r}
Ratio_logger_OISST_site_run_mean <- ratio_site_run_spec %>% 
  filter(type == "Daily means") %>% 
  mutate(spec_id = "Individual sites") %>% 
  left_join(., depth_key) %>% 
  as_spec_df() %>% 
  gg_spec(., time_unit = "years", min.colours = 1, group = site_run, alpha.line = 0.9) +
  geom_line(data = ratio_site_run_spec_mean %>%  
                filter(type == "Daily means") %>% 
              mutate(site_run = "Mean"),
            aes(x = freq, y = spec, colour = "Mean"), alpha = 1) +
  labs(y = "Logger PSD / OISST PSD") +
  guides(color = guide_legend(override.aes = list(alpha = 1)))+
  scale_color_manual("",
                     values = c("Individual sites" = "darkgrey", "Mean" = "black"),
                     aesthetics = c("fill", "colour")) +
  freq_axis + 
  geom_vline(xintercept = c(1/10, 1/2, 2, #12,
                            182.5), lty = 3) +
  theme(panel.grid = element_blank())

Ratio_logger_OISST_site_run_mean
```

#### Anomalies

```{r}
Ratio_logger_OISST_site_run_anom <- ratio_site_run_spec %>% 
  filter(type == "Daily anomalies") %>% 
  mutate(spec_id = "Individual sites") %>% 
  left_join(., depth_key) %>% 
  as_spec_df() %>% 
  gg_spec(., time_unit = "years", min.colours = 1, group = site_run, alpha.line = 0.9) +
  geom_line(data = ratio_site_run_spec_mean %>%  
                filter(type == "Daily anomalies") %>% 
              mutate(site_run = "Mean"),
            aes(x = freq, y = spec, colour = "Mean"), alpha = 1) +
  labs(y = "Logger PSD / OISST PSD") +
  guides(color = guide_legend(override.aes = list(alpha = 1)))+
  scale_color_manual("",
                     values = c("Individual sites" = "darkgrey", "Mean" = "black"),
                     aesthetics = c("fill", "colour")) +
  freq_axis + 
  geom_vline(xintercept = c(1/10, 1/2, 2, #12,
                            182.5), lty = 3) +
  theme(panel.grid = element_blank())

Ratio_logger_OISST_site_run_anom
```


#### PSD ratio as function of logger depth

```{r}
ratio_site_run_bw <- ratio_site_run_spec %>%
  mutate(spec_id = "Individual sites") %>%
  left_join(., depth_key) %>%
  #filter(freq > 12) %>%
   mutate(f_band_name = cut(freq, 
                      breaks = tscl_brks,
                      labels = tscl_labs$label,
                      dig.lab = 4,
                      include.lowest = TRUE),
         f_band = cut(freq, 
                      breaks = tscl_brks,
                      dig.lab = 4,
                      include.lowest = TRUE)
         ) %>% 
   group_by(type, f_band, f_band_name, site_run, depth) %>%
  summarise_if(is.numeric, mean)

  
```


```{r fig.height=4, fig.width=5}
fig_depth_var_ratio_col <- ratio_site_run_bw %>% 
  filter(type == "Daily anomalies") %>% 
  ungroup() %>% 
  mutate(f_band_name = factor(
    paste0(f_band_name, "\n", f_band),
    ordered = TRUE, 
    levels = c("Decadal to inter-annual\n[0.1,0.5]",
               "Inter-annual to semiannual\n(0.5,2]",
               "Semiannual to monthly\n(2,12]",
               "Monthly to inter-daily\n(12,182.5]"))) %>% 
  ggplot(aes(x = depth, y = spec,
             colour = f_band_name, 
             fill = f_band_name)) +
  geom_point(alpha = 0.5) +
  geom_hline(yintercept = 1, lty = 2) +
  scale_x_log10() +
  scale_y_log10() +
  scale_colour_viridis_d(end = 0.85, 
                         #option = "magma",
                         aesthetics = c("colour", "fill")) +
  annotation_logticks() +
  theme_bw() +
  theme(panel.grid = element_blank(), 
        strip.background = element_blank(),
        legend.key.spacing.y = unit(0.5, 'cm')) +
  geom_smooth(method = "lm") +
  labs(x = "Logger depth [m]", y = "PSD logger / PSD OISST", 
       colour = "Frequency range", fill = "Frequency range") 

fig_depth_var_ratio_col
```


### Variance ratio table

```{r}
ratio_site_run_bw %>% 
  mutate(spec_id = "Individual sites") %>% 
  left_join(., depth_key) %>% 
  group_by(type, f_band, f_band_name, site_run) %>% 
  summarise(var_ratio = mean(spec, na.rm = TRUE)) %>% 
  group_by(type, f_band, f_band_name) %>% 
  summarise_q_2(., var = var_ratio, probs = c(0, 0.025, 0.5, 0.975, 1)) %>% 
  knitr::kable(., digits = 2) 
```


## Coherence


```{r}
coherence <- function(x1, x2, spans) {

  if (length(x1) != length(x2)) {
    stop("'x1' and 'x2' need to have the same length.")
  }

  coh  <- spectrum(cbind(x1, x2), spans = spans, plot = FALSE)
 
  return(list(freq = coh$freq, coh = c(coh$coh)))

}
```


```{r}
# restructure data for daily means
tmpa <- logger_oisst_daily_10_anom %>% 
  pivot_longer(cols = c(SST_daily, SST_daily_anom), names_to = "type",
               values_to = "SST_daily") %>%
  mutate(type = ifelse(grepl("_anom", type, fixed = TRUE), "Daily anomalies", "Daily means")) %>% 
  select(-starts_with("logger_"))

# restructure data for daily anomalies
tmpb <- logger_oisst_daily_10_anom %>% 
  pivot_longer(cols = c(logger_daily, logger_daily_anom), names_to = "type",
               values_to = "logger_daily") %>%
  mutate(type = ifelse(grepl("_anom", type, fixed = TRUE), "Daily anomalies", "Daily means")) %>% 
  select(-starts_with("SST_"))

logger_oisst_daily_10_anom_long <- full_join(tmpa, tmpb)
  

AIMS_logger_oisst_coh <- logger_oisst_daily_10_anom_long %>% 
  filter(year.dec < 2024.708) %>% 
  group_by(type, SST_product, site, site_run) %>% 
  mutate(n = sum(is.na(SST_daily + logger_daily)==FALSE),
         start_year = min(year), 
         end_year = max(year)) %>% 
  group_by(type, SST_product, site, site_run, start_year, end_year) %>% 
  arrange(year.dec) %>% 
  do({
    dat <- .
    
    c1 <- coherence(ts(dat$SST_daily, deltat = 1/365), 
                    ts(dat$logger_daily, deltat = 1/365), 
                    spans = c(3,5,7))
    
    d <- as_tibble(c1) %>% 
      mutate(delta_d = signif(diff(range(dat$depth, na.rm = TRUE)), 2),
             range_d = paste0(signif(range(dat$depth, na.rm = TRUE), 2),
                              collapse = "-"))
    
  }) %>% 
  mutate(spec_id = paste(type, site, site_run),
         spec = coh) %>% 
  group_by(type, site_run) %>% 
  mutate(inc_2006_2008 = start_year <= 2006 & end_year >= 2008) %>% 
  as_spec_df()
```


```{r}
AIMS_logger_oisst_coh_smooth <- AIMS_logger_oisst_coh %>% 
  mutate(spec = coh, dof = 2) %>% 
  group_by(type, SST_product, site_run, site, spec_id, inc_2006_2008) %>% 
  do({
    dat <- .
    sp1 <- DF2Spec(dat)
    sp1 <- FilterSpecLog(sp1)
    Spec2DF(sp1)
    
  }) %>% 
  mutate(coh = spec) %>% 
  as_spec_df()
```

### Put coherence on same freq axes

```{r}
AIMS_logger_oisst_coh_reg <- AIMS_logger_oisst_coh_smooth %>% 
  as_tibble() %>% 
  #mutate(spec = coh, dof = 2) %>% 
  select(-SST_product) %>% 
  group_by(type, site, site_run, inc_2006_2008) %>% 
  do({
    freqout = seq(1/10, floor(365/2), 1/10)
    
    dat <- .
    
    sp1 <- DF2Spec(dat)
    sp2 <- PaleoSpec::SpecInterpolate(sp1,
                                      freqout)
    
    Spec2DF(sp2)
    
  })

AIMS_logger_oisst_coh_reg_mean <- AIMS_logger_oisst_coh_reg %>% 
  group_by(type, freq, inc_2006_2008) %>%
  summarise(n = sum(is.na(spec) == FALSE),
            spec = mean(spec, na.rm = TRUE),
            dof = sum(dof, na.rm = TRUE)) %>% 
  mutate(spec_id = inc_2006_2008) %>% 
  group_by(spec_id, inc_2006_2008) %>% 
  do({
    dat <- .
    sp1 <- DF2Spec(dat)
    sp2 <- AddConfInterval(sp1)
    d <- Spec2DF(sp2)
    d$n = dat$n
    d
  }) %>% 
   mutate(spec_id = inc_2006_2008) %>% 
  as_spec_df()
```

### Summarise coherence for different timescales

```{r}
AIMS_logger_oisst_coh_smooth %>% 
  group_by(type, SST_product, site_run, inc_2006_2008) %>%  
  filter(freq >= 1/10, freq <= 182.5) %>% 
  mutate(f_band_name = cut(freq, 
                      breaks = tscl_brks,
                      labels = tscl_labs$label,
                      include.lowest = TRUE,
                      dig.lab = 4),
         f_band = cut(freq, 
                      breaks = tscl_brks,
                      include.lowest = TRUE,
                      dig.lab = 4)
         ) %>% 
  group_by(type, f_band, f_band_name, site_run, inc_2006_2008) %>% 
  summarise(var_ratio = mean(spec, na.rm = TRUE)) %>% 
  group_by(type, inc_2006_2008, f_band, f_band_name) %>% 
  summarise_q_2(., var = var_ratio, probs = c(0, 0.025, 0.5, 0.975, 1)) %>% 
  knitr::kable(., digits = 2#, format = "rst"
               ) 

```


### Coherence figures

#### Daily means

```{r, fig.width=9}
fig_coh_smooth_mean <- AIMS_logger_oisst_coh_smooth %>% 
  filter(type == "Daily means") %>% 
  as_spec_df() %>% 
  ggplot(aes(x = freq, y = spec, group = site_run,
             colour = inc_2006_2008 != TRUE, alpha.line = 0.75)) +
  geom_line() +
  #gg_spec(group = site_run, colour = inc_2006_2008 != TRUE, alpha.line = 0.75) +
  #geom_hline(yintercept = mean(AIMS_logger_oisst_coh$confLevel), lty = 3, colour = "black") +
  scale_y_continuous() +
  annotation_logticks(sides="bt") +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  coord_cartesian(xlim = c(1/10, 365/2)) +
  scale_color_manual(values = c("TRUE" = "black", "FALSE" = "Grey"), breaks = c(TRUE, FALSE)) +
  labs(colour = "Excludes\n2006-2008", x = "Frequency [1/years]", y = "Squared coherency") +
  geom_vline(xintercept = c(1/10, 1/2, 2, #12,
                            182.5), lty = 3) +
 freq_axis

fig_coh_smooth_mean
```

#### Daily anomalies

```{r, fig.width=9}
fig_coh_smooth_anom <- AIMS_logger_oisst_coh_smooth %>% 
  filter(type == "Daily anomalies") %>% 
  as_spec_df() %>% 
  ggplot(aes(x = freq, y = spec, group = site_run,
             colour = inc_2006_2008 != TRUE, alpha.line = 0.75)) +
  geom_line() +
  #gg_spec(group = site_run, colour = inc_2006_2008 != TRUE, alpha.line = 0.75) +
  #geom_hline(yintercept = mean(AIMS_logger_oisst_coh$confLevel), lty = 3, colour = "black") +
  scale_y_continuous() +
  annotation_logticks(sides="bt") +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  coord_cartesian(xlim = c(1/10, 365/2)) +
  scale_color_manual(values = c("TRUE" = "black", "FALSE" = "Grey"), breaks = c(TRUE, FALSE)) +
  labs(colour = "Excludes\n2006-2008", x = "Frequency [1/years]", y = "Squared coherency") +
  geom_vline(xintercept = c(1/10, 1/2, 2, #12,
                            182.5), lty = 3) +
 freq_axis

fig_coh_smooth_anom
```



#### Coherence as a function of logger depth

```{r, fig.width=5, fig.height=4}
fig_coh_depth <- AIMS_logger_oisst_coh_smooth %>% 
  filter(type == "Daily anomalies",
         inc_2006_2008 == FALSE) %>% 
  filter(freq >= 1/10, freq <= 182.5) %>% 
  left_join(., depth_key) %>% 
  mutate(f_band_name = cut(freq, 
                      breaks = tscl_brks,
                      labels = tscl_labs$label,
                      include.lowest = TRUE,
                      dig.lab = 4),
         f_band = cut(freq, 
                      breaks = tscl_brks,
                      include.lowest = TRUE,
                      dig.lab = 4)
         ) %>% 
  group_by(type, f_band, f_band_name, site_run, inc_2006_2008, depth) %>% 
  summarise(coh = mean(spec, na.rm = TRUE)) %>% 
  ungroup() %>% 
  mutate(f_band_name = factor(
    paste0(f_band_name, "\n", f_band),
    ordered = TRUE, 
    levels = c("Decadal to inter-annual\n[0.1,0.5]",
               "Inter-annual to semiannual\n(0.5,2]",
               "Semiannual to monthly\n(2,12]",
               "Monthly to inter-daily\n(12,182.5]"))) %>% 
  ggplot(aes(x = depth, y = coh, group = f_band,
             colour = f_band_name, fill = f_band_name)) +
  geom_point(alpha = 0.75) +
  geom_smooth(method = "lm") +
  scale_y_continuous() +
  scale_x_log10() +
  annotation_logticks(sides = "b") +
  expand_limits(y = c(0, 1), x = c(1.5, 12.6)) +
  theme_bw() +
  scale_colour_viridis_d(end = 0.85,
                         aesthetics = c("colour", "fill")) +
  theme(panel.grid = element_blank(),
        legend.key.spacing.y = unit(0.5, 'cm')) +
  labs(x = "Logger depth [m]",
       y = "Squared coherency", 
       colour = "Frequency range", fill = "Frequency range") 

fig_coh_depth
```

# Composite figures

## Fig 3 - PSD, PSD ratio, and coherence for daily anomalies

```{r Fig3, fig.height=0.8*12, fig.width=0.8*9}
ref_line_col <- "#e41a1c"

combined_fig_3_anom <- patchwork::wrap_plots(
  S_logger_OISST_anom +
    theme(
      axis.title.x.bottom = element_blank(),
      panel.grid = element_blank()
    ) +
    labs(y = "PSD daily anomaly") +
    #geom_vline(xintercept = c(1, 2, 3, 4), lty = 3) +
    geom_vline(xintercept = 12, lty = 2, colour = ref_line_col),
  Ratio_logger_OISST_site_run_anom +
    theme(
      axis.title.x = element_blank(),
      panel.grid = element_blank()
    ) +
    #geom_vline(xintercept = c(1, 2, 3, 4), lty = 3) +
    geom_hline(yintercept = c(1), lty = 2, colour = ref_line_col) +
    geom_vline(xintercept = c(12), lty = 2, colour = ref_line_col),
  fig_coh_smooth_anom +
    theme(
      axis.title.x.top = element_blank(),
      panel.grid = element_blank()
    ) +
    geom_vline(xintercept = 12, lty = 2, colour = ref_line_col) +
    geom_hline(yintercept = 0.5, lty = 2, colour = ref_line_col),
  ncol = 1
) +
  patchwork::plot_annotation(tag_levels = "a")

combined_fig_3_anom
```


## Figure 4 - PSD ratio and coherence as a function of logger depth

```{r Fig4, fig.width=7, fig.height=7}
patchwork::wrap_plots(fig_depth_var_ratio_col + 
                        theme(axis.title.x = element_blank()) ,
                      fig_coh_depth +
                        theme(legend.position = "none"),
                      ncol = 1) +
  patchwork::plot_annotation(tag_levels = "a")
```


## Fig X - PSD, PSD ratio, and coherence for daily means

```{r, fig.height=0.8*12, fig.width=0.8*9}
ref_line_col <- "#e41a1c"

combined_fig_3_mean <- patchwork::wrap_plots(
  S_logger_OISST_mean +
    theme(
      axis.title.x.bottom = element_blank(),
      panel.grid = element_blank()
    ) +
    geom_vline(xintercept = 12, lty = 2, colour = ref_line_col),
  Ratio_logger_OISST_site_run_mean +
    theme(
      axis.title.x = element_blank(),
      panel.grid = element_blank()
    ) +
    geom_hline(yintercept = c(1), lty = 2, colour = ref_line_col) +
    geom_vline(xintercept = c(12), lty = 2, colour = ref_line_col),
  fig_coh_smooth_mean +
    theme(
      axis.title.x.top = element_blank(),
      panel.grid = element_blank()
    ) +
    geom_vline(xintercept = 12, lty = 2, colour = ref_line_col) +
    geom_hline(yintercept = 0.5, lty = 2, colour = ref_line_col),
  ncol = 1
) +
  patchwork::plot_annotation(tag_levels = "a")

combined_fig_3_mean
```



