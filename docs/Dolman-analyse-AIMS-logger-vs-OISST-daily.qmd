---
title: "Analyse AIMS logger data"
format:
  html:
    toc: true
    code-fold: true
  pdf:
    toc: true
    code-fold: true
    default-image-extension: png
editor: source
editor_options: 
  chunk_output_type: console
execute:
  cache: true
---



# Setup 

```{r}
knitr::opts_chunk$set(dev = "png")
```


## Packages 

Install non-cran package

```{r, eval=FALSE}
# install.packages("remotes")
remotes::install_github("EarthSystemDiagnostics/paleospec")
```

```{r packages}
library(dplyr)
library(tidyr)
library(ggplot2)
library(PaleoSpec)
```

## Palettes 

```{r palettes}
pal_logger_coral_sst <- c(
  logger = "#f0027f",
  OISSTv2 = "#386cb0",
  SST_OISST2_dis = "#386cb0"
)

lbl_logger_coral_sst <- c(
  logger = "Logger",
  OISSTv2 = "OISSTv2",
  SST_OISST2_dis = "OISSTv2"
)

lty_logger_coral_sst <- c(
  logger = 1,
  OISSTv2 = 2,
  SST_OISST2_dis = 2
)
```


## Helper functions

```{r}
summarise_q_2 <- function (dat, var, probs =
                             c(0.025, 0.159, 0.25, 0.5, 0.75, 0.841, 0.975))
{
  dat %>% dplyr::reframe(
    mean = mean({{ var }}, na.rm = TRUE),
    sd = stats::sd({{ var }}, na.rm = TRUE),
    n = sum(is.na({{ var }}) == FALSE),
    x = stats::quantile({{ var }}, probs, na.rm = TRUE),
    q = paste0(round(100 * probs, 1), "%")
    ) %>%
    tidyr::pivot_wider(names_from = .data$q, values_from = .data$x) %>%
    dplyr::as_tibble()
}
```


## Load data

```{r load-data}
aims_logger_data_inc_gaps_site_gfill_daily_runs_oisst <-
  readRDS("../data/processed-data/aims_logger_data_inc_gaps_site_pick_gfill_daily_runs_oisst.RDS")
```


## Filter and restructure data

```{r}
logger_oisst_daily_10 <- aims_logger_data_inc_gaps_site_gfill_daily_runs_oisst %>% 
  group_by(site_run) %>% 
  mutate(site_run = paste0(site, " (", min(year), "-", max(year), ")"),
         run = paste0("(", min(year), "-", max(year), ")")) %>% 
  rename(SST = sst,
         SST_product = interp_type) %>% 
  mutate(year.dec = lubridate::decimal_date(date))
```

```{r}
logger_oisst_daily_10 %>% 
  group_by(SST_product) %>% 
  summarise(n = sum(is.na(SST) == FALSE))
```


## Aggregate to annual means

```{r}
logger_oisst_ann <- logger_oisst_daily_10 %>%
  group_by(SST_product, site, site_run, run, year) %>%
  mutate(n = sum(is.na(qc_val_filled) == FALSE)) %>%
  filter(n >= 12) %>%
  summarise_if(is.numeric, mean, na.rm = TRUE) %>%
  group_by(SST_product, site, site_id, site_run) %>%
  mutate(qc_val_filled_anom = qc_val_filled - mean(qc_val_filled),
         sst_anom = SST - mean(SST),
         n_years = diff(range(year.dec)))
```



## RMSE and Bias over time

```{r}
#RMSE by year
RMSE_year <- logger_oisst_ann %>% 
  group_by(SST_product, year) %>% 
  summarise(
    n = n(),
    depth = mean(depth, na.rm = TRUE),
    se = sd(SST-qc_val_filled) / sqrt(n),
    bias = mean((qc_val_filled-SST)),
    RMSE = sqrt(mean((SST-qc_val_filled)^2)),
    rho = cor(SST, qc_val_filled)
    ) 

RMSE_mon <-  logger_oisst_daily_10 %>% 
  group_by(SST_product, year, month, year.dec) %>% 
  summarise(
    n = n(),
    depth = mean(depth, na.rm = TRUE),
    se = sd(SST-qc_val_filled, na.rm = TRUE) / sqrt(n),
    bias = mean((qc_val_filled-SST)),
    RMSE = sqrt(mean((SST-qc_val_filled)^2, na.rm = TRUE))
    )
```


```{r}
fig_bias_year <- RMSE_year %>% 
  filter(n > 5) %>% 
  ggplot(aes(x = year, y = bias)) +
  geom_hline(yintercept = 0, lty = 2) +
  #geom_hline(yintercept = median(RMSE_year$bias), lty = 2) +
  geom_linerange(aes(ymax = bias + 2*se, ymin = bias - 2*se), alpha = 0.5, lwd = 0.75) +
  geom_linerange(aes(ymax = bias + 1*se, ymin = bias - 1*se), alpha = 0.75, lwd = 1.25) +
  geom_point(alpha = 1, size = 2) +
  geom_line(alpha = 0.75) +
  scale_x_continuous(breaks = seq(1990, 2024, 3)) +
  labs(x = "Year", y = "Offset (logger - OISST) [Â°C]") +
  theme_bw() +
  theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank()) +
  scale_color_viridis_c()

fig_bias_year  

ggsave(fig_bias_year, file = "pub-figs/fig_bias_year.png", width = 6, height = 4, dpi = 300)

```





## Spectra of matched logger OISSTv2 timeseries



```{r}
AIMS_logger_spec_match <- logger_oisst_daily_10 %>% 
  group_by(site, site_run, run) %>% 
  filter(complete.cases(SST)) %>% 
  mutate(start_year = min(year), 
         end_year = max(year),
         inc_2006_2008 = start_year <= 2006 & end_year >= 2008) %>% 
  group_by(site, site_run, inc_2006_2008, run) %>% 
  arrange(year.dec) %>% 
  do({
    dat <- . 
    
    dat_sub <- dat %>% 
      filter(SST_product == "SST_OISST2_dis")
    
  
    sp_logger <- PaleoSpec::SpecMTM(dat_sub$qc_val_filled,
                                    deltat = 1/365, k = 3, nw = 2) %>% 
      
      
      AddConfInterval() %>% 
      FilterSpecLog(., df.log = 0.01) %>% 
      Spec2DF() %>% 
      mutate(type = "logger")
    
    sp_oisst_ersst <- dat_sub %>% 
      group_by(SST_product) %>% 
      do({
        dat2 <- .
        PaleoSpec::SpecMTM(dat2$SST,
                           deltat = 1/365, k = 3, nw = 2) %>% 
          AddConfInterval() %>% 
          FilterSpecLog(., df.log = 0.01) %>% 
          Spec2DF() %>% 
          mutate(type = unique(dat2$SST_product))
      })
      
    
    bind_rows(
      sp_oisst_ersst, sp_logger
    )
    
  }) %>% 
  mutate(spec_id = paste(site, site_run)) %>% 
  as_spec_df()
```



### Mean spec across locations

```{r}
AIMS_logger_spec_match_reg <- AIMS_logger_spec_match %>% 
  as_tibble() %>% 
  select(-SST_product) %>% 
  group_by(site, site_run, inc_2006_2008, type) %>% 
  do({
    freqout = seq(1/10, floor(365/2), 1/10)
    
    dat <- .
    
    sp1 <- DF2Spec(dat)
    sp2 <- PaleoSpec::SpecInterpolate(sp1,
                                      freqout)
    #sp3 <- FilterSpecLog(sp2)
    Spec2DF(sp2)
    
  }) %>% 
  mutate(spec_id = site_run) %>% 
  as_spec_df()

#gg_spec(AIMS_logger_spec_match_reg, colour = type, group = paste(type, site_run))

AIMS_logger_spec_match_reg_mean <- AIMS_logger_spec_match_reg %>% 
  group_by(type, freq) %>%
  summarise(n = sum(is.na(spec) == FALSE),
            spec = mean(spec, na.rm = TRUE),
            dof = sum(dof, na.rm = TRUE)) %>% 
  mutate(spec_id = type) %>% 
  group_by(type, spec_id) %>% 
  do({
    dat <- .
    sp1 <- DF2Spec(dat)
    sp3 <- AddConfInterval(sp1)
    d <- Spec2DF(sp3)
    d$n = dat$n
    d
  }) %>% 
  mutate(spec_id = type) %>% 
  as_spec_df()

#gg_spec(AIMS_logger_spec_match_reg_mean)
```



```{r}
S_logger_OISST_mean <- AIMS_logger_spec_match_reg_mean %>% 
  as_spec_df() %>% 
  gg_spec(., group = paste(type),
        colour = type, linetype = type, force.lims = TRUE,
        time_unit = "years") +
  scale_colour_manual("", values = pal_logger_coral_sst, 
                      labels = lbl_logger_coral_sst,
                      aesthetics = c("fill", "colour")) +
  scale_linetype_manual("", values = lty_logger_coral_sst, 
                        labels = lbl_logger_coral_sst) +
   ggplot2::scale_x_continuous(
      trans = "log10",
      breaks = c(100, 10, 1, 0.1, 0.01),
      labels = c(100, 10, 1, 0.1, 0.01),
      sec.axis = ggplot2::sec_axis(~ 1 / ., name = "Timescale [years]",
                                   breaks = c(10, 1, 0.1, 0.01),
                                   labels = c(10, 1, 0.1, 0.01))
    )

S_logger_OISST_mean
```


#### Spec ratio per site_run

```{r}
pval <- 0.05
ratio_site_run_spec <- AIMS_logger_spec_match_reg %>% 
  as_tibble() %>% 
  #select(-lim.1, -lim.2) %>% 
  pivot_wider(names_from = type, values_from = c(spec, dof)) %>% 
  mutate(Logger_OISST = (spec_logger / spec_SST_OISST2_dis)) %>% 
  pivot_longer(cols = starts_with("Logger_"), values_to = "spec", names_to = "product") %>% 
  mutate(spec_id = product) %>% 
  mutate(lim.1 = qf(c(1 - pval / 2), dof_logger, dof_SST_OISST2_dis) * spec,
          lim.2 = qf(c(pval / 2), dof_logger, dof_SST_OISST2_dis) * spec 
 ) %>% 
  as_spec_df() 


ratio_site_run_spec_mean <- ratio_site_run_spec %>% 
  group_by(freq) %>% 
  summarise_if(is.numeric, mean, na.rm = TRUE)
```


```{r}
## Save for later use
saveRDS(ratio_site_run_spec, file = "../data/processed-data/logger_OISST_ratio_site_run_spec.RDS")
```


```{r}
depth_key <- logger_oisst_daily_10 %>% 
  group_by(site, site_run) %>% 
  summarise(depth = mean(depth, na.rm = TRUE))
```




```{r}
Ratio_logger_OISST_site_run <- ratio_site_run_spec %>% 
  mutate(spec_id = "Individual sites") %>% 
  left_join(., depth_key) %>% 
  as_spec_df() %>% 
  gg_spec(., time_unit = "years", min.colours = 1, group = site_run, alpha.line = 0.9) +
  geom_line(data = ratio_site_run_spec_mean %>%  
              mutate(site_run = "Mean"),
            aes(x = freq, y = spec, colour = "Mean"), alpha = 1) +
  labs(y = "Logger PSD / OISST PSD") +
  guides(color = guide_legend(override.aes = list(alpha = 1)))+
  scale_color_manual("",
                     values = c("Individual sites" = "darkgrey", "Mean" = "black"),
                     aesthetics = c("fill", "colour")) +
   ggplot2::scale_x_continuous(
      trans = "log10",
      breaks = c(100, 10, 1, 0.1, 0.01),
      labels = c(100, 10, 1, 0.1, 0.01),
      sec.axis = ggplot2::sec_axis(~ 1 / ., name = "Timescale [years]",
                                   breaks = c(10, 1, 0.1, 0.01),
                                   labels = c(10, 1, 0.1, 0.01))
    )
  #facet_wrap(~site)

Ratio_logger_OISST_site_run
```


```{r}
ratio_site_run_bw <- ratio_site_run_spec %>%
  mutate(spec_id = "Individual sites") %>%
  left_join(., depth_key) %>%
  #filter(freq > 12) %>%
  mutate(f_band_name = cut(freq,
                      breaks = c(0.09, 1, 12, 182),
                      labels = c("Decadal to annual", "Annual to monthly",
                                 "Monthly to inter-daily")),
         f_band = cut(freq,
                      breaks = c(0.09, 1, 12, 182))
         ) %>%
   group_by(f_band, f_band_name, site_run, depth) %>%
  summarise_if(is.numeric, mean)
```


```{r fig.height=8, fig.width=6}
# ratio_site_run_bw %>% 
fig_depth_var_ratio <- ratio_site_run_bw %>% 
  ggplot(aes(x = depth, y = spec)) +
  geom_point(alpha = 0.5) +
  geom_hline(yintercept = 1, lty = 2) +
  scale_x_log10() +
  scale_y_log10() +
  annotation_logticks() +
  theme_bw() +
  theme(panel.grid = element_blank(), strip.background = element_blank()) +
  geom_smooth(method = "lm", colour = "black", fill = "darkgrey") +
  labs(x = "Logger depth [m]", y = "Logger / OISST variance ratio") +
  facet_wrap(~f_band_name+f_band, ncol = 1, labeller = labeller(.multi_line = FALSE)) 

fig_depth_var_ratio

ggsave(fig_depth_var_ratio, file = "pub-figs/fig_depth_var_ratio.png", width = 3.5, height = 6, dpi = 300)

```



### Variance ratio table

```{r}
ratio_site_run_spec %>% 
  mutate(spec_id = "Individual sites") %>% 
  left_join(., depth_key) %>% 
  #filter(freq > 12) %>% 
  mutate(f_band_name = cut(freq, 
                      breaks = c(0.09, 12, 
                                 182),
                      labels = c("Decadal to monthly",
                                 "Monthly to inter-daily")),
         f_band = cut(freq, 
                      breaks = c(0.09, 12, 
                                 #52,
                                 182))
         ) %>% 
  group_by(f_band, f_band_name, site_run) %>% 
  summarise(var_ratio = mean(spec, na.rm = TRUE)) %>% 
  group_by(f_band, f_band_name) %>% 
  summarise_q_2(., var = var_ratio, probs = c(0, 0.5, 1)) %>% 
  knitr::kable(., digits = 2, format = "rst") 

```



## Coherence


```{r}
coherence <- function(x1, x2, spans) {

  if (length(x1) != length(x2)) {
    stop("'x1' and 'x2' need to have the same length.")
  }

  coh  <- spectrum(cbind(x1, x2), spans = spans, plot = FALSE)
 
  return(list(freq = coh$freq, coh = c(coh$coh)))

}
```


```{r}
AIMS_logger_oisst_coh <- logger_oisst_daily_10 %>% 
  filter(year.dec < 2024.708) %>% 
  group_by(SST_product, site, site_run) %>% 
  mutate(n = sum(is.na(SST+qc_val_filled)==FALSE),
         start_year = min(year), 
         end_year = max(year)) %>% 
  #filter(n >= 9*12) %>% 
  group_by(SST_product, site, site_run, start_year, end_year) %>% 
  arrange(year.dec) %>% 
  do({
    dat <- .
    
    c1 <- coherence(ts(dat$SST, deltat = 1/365), 
                    ts(dat$qc_val_filled, deltat = 1/365), 
                    spans = c(3,5,7))
    
    d <- as_tibble(c1) %>% 
      mutate(delta_d = signif(diff(range(dat$depth, na.rm = TRUE)), 2),
             range_d = paste0(signif(range(dat$depth, na.rm = TRUE), 2),
                              collapse = "-"))
    
  }) %>% 
  mutate(spec_id = paste(site, site_run),
         spec = coh) %>% 
  group_by(site_run) %>% 
  mutate(inc_2006_2008 = start_year <= 2006 & end_year >= 2008) %>% 
  as_spec_df()
```



```{r}
AIMS_logger_oisst_coh_smooth <- AIMS_logger_oisst_coh %>% 
  mutate(spec = coh, dof = 2) %>% 
  group_by(SST_product, site_run, site, spec_id, inc_2006_2008) %>% 
  do({
    dat <- .
    sp1 <- DF2Spec(dat)
    sp1 <- FilterSpecLog(sp1)
    Spec2DF(sp1)
    
  }) %>% 
  mutate(coh = spec) %>% 
  as_spec_df()
```

## put coh on same freq axes

```{r}
AIMS_logger_oisst_coh_reg <- AIMS_logger_oisst_coh_smooth %>% 
  as_tibble() %>% 
  #mutate(spec = coh, dof = 2) %>% 
  select(-SST_product) %>% 
  group_by(site, site_run, inc_2006_2008) %>% 
  do({
    freqout = seq(1/10, floor(365/2), 1/10)
    
    dat <- .
    
    sp1 <- DF2Spec(dat)
    sp2 <- PaleoSpec::SpecInterpolate(sp1,
                                      freqout)
    
    Spec2DF(sp2)
    
  })

AIMS_logger_oisst_coh_reg_mean <- AIMS_logger_oisst_coh_reg %>% 
  group_by(freq, inc_2006_2008) %>%
  summarise(n = sum(is.na(spec) == FALSE),
            spec = mean(spec, na.rm = TRUE),
            dof = sum(dof, na.rm = TRUE)) %>% 
  mutate(spec_id = inc_2006_2008) %>% 
  group_by(spec_id, inc_2006_2008) %>% 
  do({
    dat <- .
    sp1 <- DF2Spec(dat)
    sp2 <- AddConfInterval(sp1)
    d <- Spec2DF(sp2)
    d$n = dat$n
    d
  }) %>% 
   mutate(spec_id = inc_2006_2008) %>% 
  as_spec_df()
```

```{r}
AIMS_logger_oisst_coh_smooth %>% 
  group_by(SST_product, site_run, inc_2006_2008) %>% 
  filter(freq >= 1/10, freq <= 1/5) %>% 
  summarise(coh = mean(coh)) %>% 
  group_by(inc_2006_2008) %>% 
  summarise_q_2(., coh) %>% 
  knitr::kable(., digits = 2)
```


```{r, fig.width=9}
fig_coh_smooth <- AIMS_logger_oisst_coh_smooth %>% 
  #filter(freq >= 1/10) %>% 
  as_spec_df() %>% 
  ggplot(aes(x = freq, y = spec, group = site_run,
             colour = inc_2006_2008 != TRUE, alpha.line = 0.75)) +
  geom_line() +
  #gg_spec(group = site_run, colour = inc_2006_2008 != TRUE, alpha.line = 0.75) +
  #geom_hline(yintercept = mean(AIMS_logger_oisst_coh$confLevel), lty = 3, colour = "black") +
  scale_y_continuous() +
  annotation_logticks(sides="bt") +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  coord_cartesian(xlim = c(1/10, 365/2)) +
  scale_color_manual(values = c("TRUE" = "black", "FALSE" = "Grey"), breaks = c(TRUE, FALSE)) +
  labs(colour = "Excludes\n2006-2008", x = "Frequency [1/years]", y = "Squared coherency") +
   ggplot2::scale_x_continuous(
      trans = "log10",
      breaks = c(100, 10, 1, 0.1, 0.01),
      labels = c(100, 10, 1, 0.1, 0.01),
      sec.axis = ggplot2::sec_axis(~ 1 / ., name = "Timescale [years]",
                                   breaks = c(10, 1, 0.1, 0.01),
                                   labels = c(10, 1, 0.1, 0.01))
    )

fig_coh_smooth


```

```{r, fig.height=0.8*12, fig.width=0.8*9}
ref_line_col <- "#e41a1c"

combined_fig_2 <- patchwork::wrap_plots(S_logger_OISST_mean + 
                        theme(axis.title.x.bottom = element_blank(), 
                              panel.grid = element_blank()) + 
                        geom_vline(xintercept = 12, lty = 2, colour = ref_line_col),
                      Ratio_logger_OISST_site_run + 
                        theme(axis.title.x = element_blank(), 
                              panel.grid = element_blank()) + 
                        geom_hline(yintercept = c(1), lty = 2, colour = ref_line_col) +
                        geom_vline(xintercept = c(12), lty = 2, colour = ref_line_col),
                      fig_coh_smooth + 
                        theme(axis.title.x.top = element_blank(), 
                              panel.grid = element_blank()) + 
                        geom_vline(xintercept = 12, lty = 2, colour = ref_line_col) + 
                        geom_hline(yintercept = 0.5, lty = 2, colour = ref_line_col),
                      ncol = 1) +
  patchwork::plot_annotation(tag_levels = 'A')

combined_fig_2
```

```{r}
ggsave(combined_fig_2, file = "pub-figs/combined_fig_2.png", width = 6, height = 8, dpi = 300)

```

